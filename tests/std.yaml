tests:
- name: condition_type_guards
  program: (a (q 2 (q 2 (i (= (f (c (q . 1) ())) (q . 1)) (q 2 (i (= (f (c (q . 1) (q . 42))) (q . 1)) (q 2 (i (= (f (c (q . 43) (c 5 (c () ())))) (q . 43)) (q 2 (i (= (f (c (q . 44) (c 5 (c () ())))) (q . 44)) (q 2 (i (= (f (c (q . 45) (c 5 (c () ())))) (q . 45)) (q 2 (i (= (f (c (q . 46) (c 5 (c () ())))) (q . 46)) (q 2 (i (= (f (c (q . 47) (c 5 (c () ())))) (q . 47)) (q 2 (i (= (f (c (q . 48) (c 5 (c () ())))) (q . 48)) (q 2 (i (= (f (c (q . 49) (c 5 (c () ())))) (q . 49)) (q 2 (i (= (f (c (q . 50) (c 5 (c () ())))) (q . 50)) (q 2 (i (= (f (c (q . 51) (c 4 (c (q . 42) ())))) (q . 51)) (q 2 (i (= (f (c (q . 52) (c (q . 42) ()))) (q . 52)) (q 2 (i (= (f (c (q . 60) (c () ()))) (q . 60)) (q 2 (i (= (f (c (q . 61) (c 10 ()))) (q . 61)) (q 2 (i (= (f (c (q . 62) (c () ()))) (q . 62)) (q 2 (i (= (f (c (q . 63) (c 10 ()))) (q . 63)) (q 2 (i (= (f (c (q . 64) (c 14 ()))) (q . 64)) (q 2 (i (= (f (c (q . 65) (c 4 ()))) (q . 65)) (q 2 (i (= (f (c (q . 66) (c (q . 42) (c () (c (q . 42) ()))))) (q . 66)) (q 2 (i (= (f (c (q . 67) (c (q . 42) (c () (c (q . 42) ()))))) (q . 67)) (q 2 (i (= (f (c (q . 70) (c 14 ()))) (q . 70)) (q 2 (i (= (f (c (q . 71) (c 10 ()))) (q . 71)) (q 2 (i (= (f (c (q . 72) (c 4 ()))) (q . 72)) (q 2 (i (= (f (c (q . 73) (c (q . 42) ()))) (q . 73)) (q 2 (i (= (f (c (q . 74) (c (q . 42) ()))) (q . 74)) (q 2 (i (= (f (c (q . 75) (c (q . 42) ()))) (q . 75)) (q 2 (i (= (f (c (q . 76) ())) (q . 76)) (q 2 (i (= (f (c (q . 80) (c (q . 42) ()))) (q . 80)) (q 2 (i (= (f (c (q . 81) (c (q . 42) ()))) (q . 81)) (q 2 (i (= (f (c (q . 82) (c (q . 42) ()))) (q . 82)) (q 2 (i (= (f (c (q . 83) (c (q . 42) ()))) (q . 83)) (q 2 (i (= (f (c (q . 84) (c (q . 42) ()))) (q . 84)) (q 2 (i (= (f (c (q . 85) (c (q . 42) ()))) (q . 85)) (q 2 (i (= (f (c (q . 86) (c (q . 42) ()))) (q . 86)) (q 2 (i (= (f (c (q . 87) (c (q . 42) ()))) (q . 87)) (q 2 (i (= (f (c (q . 90) (c (q . 42) ()))) (q . 90)) (q) (q 8)) 1) (q 8)) 1) (q 8)) 1) (q 8)) 1) (q 8)) 1) (q 8)) 1) (q 8)) 1) (q 8)) 1) (q 8)) 1) (q 8)) 1) (q 8)) 1) (q 8)) 1) (q 8)) 1) (q 8)) 1) (q 8)) 1) (q 8)) 1) (q 8)) 1) (q 8)) 1) (q 8)) 1) (q 8)) 1) (q 8)) 1) (q 8)) 1) (q 8)) 1) (q 8)) 1) (q 8)) 1) (q 8)) 1) (q 8)) 1) (q 8)) 1) (q 8)) 1) (q 8)) 1) (q 8)) 1) (q 8)) 1) (q 8)) 1) (q 8)) 1) (q 8)) 1) (q 8)) 1) (c (c (sha256 (q . "puzzle_hash")) (c (sha256 (q . 26980)) (sha256 (q . "coin_id")))) 1)) (c (point_add) 1))
  debug_program: (a (q 2 (q 2 (i (= (f (c (q . 1) ())) (q . 1)) (q 2 (i (= (f (c (q . 1) (q . 42))) (q . 1)) (q 2 (i (= (f (c (q . 43) (c 5 (c () ())))) (q . 43)) (q 2 (i (= (f (c (q . 44) (c 5 (c () ())))) (q . 44)) (q 2 (i (= (f (c (q . 45) (c 5 (c () ())))) (q . 45)) (q 2 (i (= (f (c (q . 46) (c 5 (c () ())))) (q . 46)) (q 2 (i (= (f (c (q . 47) (c 5 (c () ())))) (q . 47)) (q 2 (i (= (f (c (q . 48) (c 5 (c () ())))) (q . 48)) (q 2 (i (= (f (c (q . 49) (c 5 (c () ())))) (q . 49)) (q 2 (i (= (f (c (q . 50) (c 5 (c () ())))) (q . 50)) (q 2 (i (= (f (c (q . 51) (c 4 (c (q . 42) ())))) (q . 51)) (q 2 (i (= (f (c (q . 52) (c (q . 42) ()))) (q . 52)) (q 2 (i (= (f (c (q . 60) (c () ()))) (q . 60)) (q 2 (i (= (f (c (q . 61) (c 10 ()))) (q . 61)) (q 2 (i (= (f (c (q . 62) (c () ()))) (q . 62)) (q 2 (i (= (f (c (q . 63) (c 10 ()))) (q . 63)) (q 2 (i (= (f (c (q . 64) (c 14 ()))) (q . 64)) (q 2 (i (= (f (c (q . 65) (c 4 ()))) (q . 65)) (q 2 (i (= (f (c (q . 66) (c (q . 42) (c () (c (q . 42) ()))))) (q . 66)) (q 2 (i (= (f (c (q . 67) (c (q . 42) (c () (c (q . 42) ()))))) (q . 67)) (q 2 (i (= (f (c (q . 70) (c 14 ()))) (q . 70)) (q 2 (i (= (f (c (q . 71) (c 10 ()))) (q . 71)) (q 2 (i (= (f (c (q . 72) (c 4 ()))) (q . 72)) (q 2 (i (= (f (c (q . 73) (c (q . 42) ()))) (q . 73)) (q 2 (i (= (f (c (q . 74) (c (q . 42) ()))) (q . 74)) (q 2 (i (= (f (c (q . 75) (c (q . 42) ()))) (q . 75)) (q 2 (i (= (f (c (q . 76) ())) (q . 76)) (q 2 (i (= (f (c (q . 80) (c (q . 42) ()))) (q . 80)) (q 2 (i (= (f (c (q . 81) (c (q . 42) ()))) (q . 81)) (q 2 (i (= (f (c (q . 82) (c (q . 42) ()))) (q . 82)) (q 2 (i (= (f (c (q . 83) (c (q . 42) ()))) (q . 83)) (q 2 (i (= (f (c (q . 84) (c (q . 42) ()))) (q . 84)) (q 2 (i (= (f (c (q . 85) (c (q . 42) ()))) (q . 85)) (q 2 (i (= (f (c (q . 86) (c (q . 42) ()))) (q . 86)) (q 2 (i (= (f (c (q . 87) (c (q . 42) ()))) (q . 87)) (q 2 (i (= (f (c (q . 90) (c (q . 42) ()))) (q . 90)) (q) (q 8 (q . "assertion failed at 41:5"))) 1) (q 8 (q . "assertion failed at 40:5"))) 1) (q 8 (q . "assertion failed at 39:5"))) 1) (q 8 (q . "assertion failed at 38:5"))) 1) (q 8 (q . "assertion failed at 37:5"))) 1) (q 8 (q . "assertion failed at 36:5"))) 1) (q 8 (q . "assertion failed at 35:5"))) 1) (q 8 (q . "assertion failed at 34:5"))) 1) (q 8 (q . "assertion failed at 33:5"))) 1) (q 8 (q . "assertion failed at 32:5"))) 1) (q 8 (q . "assertion failed at 31:5"))) 1) (q 8 (q . "assertion failed at 30:5"))) 1) (q 8 (q . "assertion failed at 29:5"))) 1) (q 8 (q . "assertion failed at 28:5"))) 1) (q 8 (q . "assertion failed at 27:5"))) 1) (q 8 (q . "assertion failed at 26:5"))) 1) (q 8 (q . "assertion failed at 25:5"))) 1) (q 8 (q . "assertion failed at 24:5"))) 1) (q 8 (q . "assertion failed at 23:5"))) 1) (q 8 (q . "assertion failed at 22:5"))) 1) (q 8 (q . "assertion failed at 21:5"))) 1) (q 8 (q . "assertion failed at 20:5"))) 1) (q 8 (q . "assertion failed at 19:5"))) 1) (q 8 (q . "assertion failed at 18:5"))) 1) (q 8 (q . "assertion failed at 17:5"))) 1) (q 8 (q . "assertion failed at 16:5"))) 1) (q 8 (q . "assertion failed at 15:5"))) 1) (q 8 (q . "assertion failed at 14:5"))) 1) (q 8 (q . "assertion failed at 13:5"))) 1) (q 8 (q . "assertion failed at 12:5"))) 1) (q 8 (q . "assertion failed at 11:5"))) 1) (q 8 (q . "assertion failed at 10:5"))) 1) (q 8 (q . "assertion failed at 9:5"))) 1) (q 8 (q . "assertion failed at 8:5"))) 1) (q 8 (q . "assertion failed at 7:5"))) 1) (q 8 (q . "assertion failed at 6:5"))) 1) (c (c (sha256 (q . "puzzle_hash")) (c (sha256 (q . 26980)) (sha256 (q . "coin_id")))) 1)) (c (point_add) 1))
  output: ()
  runtime_cost: 125741
  byte_cost: 22020000
  total_cost: 22145741
- name: hashing
  program: (a (q 2 (i (= (a 2 (c 2 (q . "hello"))) (q . 0xcceeb7a985ecc3dabcb4c8f666cd637f16f008e3c963db6aa6f83a7b288c54ef)) (q 2 (i (= (a 2 (c 2 (q . "hello"))) (sha256 (q . 0x0168656c6c6f))) (q 2 (i (= (sha256 (q . 0x0168656c6c6f)) (sha256 (q . 0x0168656c6c6f))) (q 2 (q 2 (i (a (i (= 2 (q . 0xc71082ef47283d2f0723105cbddea6e3fa73e772d12587ec2d2a29a6f8057bc3)) (q 1 . 1) (q 2 (i (= 2 (q . 0x19c7b1ed29e8f501f6985cd6addd3b6e5bd7ccc251f1a4018550837b3006239b)) (q 1 . 1) (q)) 1)) 1) (q) (q 8)) 1) (c (a 2 (c 2 (q 16 2 5))) 1)) (q 8)) 1) (q 8)) 1) (q 8)) 1) (c (q 2 (i (l 3) (q 11 (q . 2) (a 2 (c 2 5)) (a 2 (c 2 7))) (q 11 (q . 1) 3)) 1) 1))
  debug_program: (a (q 2 (i (= (a 2 (c 2 (q . "hello"))) (q . 0xcceeb7a985ecc3dabcb4c8f666cd637f16f008e3c963db6aa6f83a7b288c54ef)) (q 2 (i (= (a 2 (c 2 (q . "hello"))) (sha256 (concat (q . 1) (q . "hello")))) (q 2 (i (= (sha256 (concat (q . 1) (q . "hello"))) (sha256 (concat (q . 1) (q . "hello")))) (q 2 (q 2 (i (a (i (= 4 10) (q 1 . 1) (q 2 (i (= 4 14) (q 1 . 1) (q)) 1)) 1) (q) (q 8 (q . "assertion failed at 57:5"))) 1) (c (c (a 2 (c 2 (c (q . 2) (c (c (q . 1) (q 16 2 5)) (c (q . 1) ()))))) (c (q . 0xc71082ef47283d2f0723105cbddea6e3fa73e772d12587ec2d2a29a6f8057bc3) (q . 0x19c7b1ed29e8f501f6985cd6addd3b6e5bd7ccc251f1a4018550837b3006239b))) 1)) (q 8 (q . "assertion failed at 47:5"))) 1) (q 8 (q . "assertion failed at 46:5"))) 1) (q 8 (q . "assertion failed at 45:5"))) 1) (c (q 2 (i (not (l 3)) (q 11 (concat (q . 1) 3)) (q 11 (concat (concat (q . 2) (a 2 (c 2 (f 3)))) (a 2 (c 2 (r 3)))))) 1) 1))
  output: ()
  runtime_cost: 16927
  byte_cost: 5292000
  total_cost: 5308927
- name: currying
  program: (a (q 2 (i (= (sha256 (q . 2) (sha256 (q . 258)) (sha256 (q . 2) (sha256 (q . 2) (sha256 (q . 257)) (a 4 (c 4 (q . "xyz")))) (sha256 (q . 2) (a 6 (c 6 (c (a 4 (c 4 (q . 97))) (c (a 4 (c 4 (q . 98))) (c (a 4 (c 4 (q . 99))) ()))))) (sha256 (q . 1))))) (q . 0x932daac5826a521478ec3dc75c49f889278bc56bf6afa45cdfa3aadffe2e76ed)) (q) (q 8)) 1) (c (c (q 2 (i (l 3) (q 11 (q . 2) (a 2 (c 2 5)) (a 2 (c 2 7))) (q 11 (q . 1) 3)) 1) (q 2 (i 3 (q 11 (q . 2) (sha256 (q . 260)) (sha256 (q . 2) (sha256 (q . 2) (sha256 (q . 257)) 5) (sha256 (q . 2) (a 2 (c 2 7)) (sha256 (q . 1))))) (q 11 (q . 257))) 1)) 1))
  debug_program: (a (q 2 (q 2 (i (= 2 (q . 0x932daac5826a521478ec3dc75c49f889278bc56bf6afa45cdfa3aadffe2e76ed)) (q) (q 8 (q . "assertion failed at 62:5"))) 1) (c (sha256 (concat (concat (q . 2) (sha256 (concat (q . 1) (q . 2)))) (sha256 (concat (concat (q . 2) (sha256 (concat (concat (q . 2) (sha256 (concat (q . 1) (q . 1)))) (a 4 (c 4 (q . "xyz")))))) (sha256 (concat (concat (q . 2) (a 6 (c 6 (c (a 4 (c 4 (q . 97))) (c (a 4 (c 4 (q . 98))) (c (a 4 (c 4 (q . 99))) ())))))) (sha256 (concat (q . 1) ())))))))) 1)) (c (c (q 2 (i (not (l 3)) (q 11 (concat (q . 1) 3)) (q 11 (concat (concat (q . 2) (a 2 (c 2 (f 3)))) (a 2 (c 2 (r 3)))))) 1) (q 2 (i (not (l 3)) (q 11 (concat (q . 1) (q . 1))) (q 11 (concat (concat (q . 2) (sha256 (concat (q . 1) (q . 4)))) (sha256 (concat (concat (q . 2) (sha256 (concat (concat (q . 2) (sha256 (concat (q . 1) (q . 1)))) (f 3)))) (sha256 (concat (concat (q . 2) (a 2 (c 2 (r 3)))) (sha256 (concat (q . 1) ()))))))))) 1)) 1))
  output: ()
  runtime_cost: 31127
  byte_cost: 4800000
  total_cost: 4831127
- name: recursion
  program: (a (q 2 10 (c (c 4 (c 10 14)) (c (c () (c (q . "Hello, world!") (c (c (q . 100) (q . 200)) (c (c (q . 1) (c (q . 2) (c (q . 3) ()))) (c (q 16 2 5) (c (c (q . 2) (c (c (q . 1) 10) (c (c (q . 4) (c (c (q . 1) 10) (c (c (q . 4) (c (c (q . 1) 4) (c (c (q . 4) (c (c (q . 1) 14) (c (q . 1) ()))) ()))) ()))) ()))) ())))))) ()))) (c (c (q 2 (i (l 3) (q 11 (q . 2) (a 2 (c 2 5)) (a 2 (c 2 7))) (q 11 (q . 1) 3)) 1) (c (q 2 (i 5 (q 2 (q 2 (i (a 29 (c 29 (c 4 4))) (q 2 (i (= (a 9 (c 9 4)) (a 9 (c 9 4))) (q 2 21 (c (c 9 (c 21 29)) (c 6 ()))) (q 8)) 1) (q 8)) 1) (c 5 1)) (q)) 1) (q 2 (i (l 7) (q 2 (i (l 5) (q 2 (i (a 2 (c 2 (c 9 11))) (q 2 (i (a 2 (c 2 (c 13 15))) (q 1 . 1) (q)) 1) (q)) 1) (q)) 1) (q 2 (i (l 5) (q) (q 9 7 5)) 1)) 1))) 1))
  debug_program: (a (q 2 10 (c (c 4 (c 10 14)) (c (c () (c (q . "Hello, world!") (c (c (q . 100) (q . 200)) (c (c (q . 1) (c (q . 2) (c (q . 3) ()))) (c (c (q . 2) (c (c (q . 1) (q 16 2 5)) (c (q . 1) ()))) (c (c (q . 2) (c (c (q . 1) 10) (c (c (q . 4) (c (c (q . 1) 10) (c (c (q . 4) (c (c (q . 1) 4) (c (c (q . 4) (c (c (q . 1) 14) (c (q . 1) ()))) ()))) ()))) ()))) ())))))) ()))) (c (c (q 2 (i (not (l 3)) (q 11 (concat (q . 1) 3)) (q 11 (concat (concat (q . 2) (a 2 (c 2 (f 3)))) (a 2 (c 2 (r 3)))))) 1) (c (q 2 (i (not (l 5)) (q) (q 2 (q 2 (i (a 29 (c 29 (c (f 2) (f 2)))) (q 2 (i (= (a 9 (c 9 (f 2))) (a 9 (c 9 (f 2)))) (q 2 21 (c (c 9 (c 21 29)) (c (r 2) ()))) (q 8 (q . "assertion failed at 84:5"))) 1) (q 8 (q . "assertion failed at 83:5"))) 1) (c 5 1))) 1) (q 2 (i (not (l 7)) (q 2 (i (not (l 5)) (q 9 7 5) (q)) 1) (q 2 (i (not (l 5)) (q) (q 2 (i (a 2 (c 2 (c (f 5) (f 7)))) (q 2 (i (a 2 (c 2 (c (r 5) (r 7)))) (q 1 . 1) (q)) 1) (q)) 1)) 1)) 1))) 1))
  output: ()
  runtime_cost: 2336226
  byte_cost: 7584000
  total_cost: 9920226
