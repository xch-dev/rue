tests:
- name: call_binary_tree
  program: (a (i (> (q . 351) ()) (q 2 (i (> (q . 1027) ()) (q 2 (i (> (q . 1703) ()) (q 2 (i (> (q . 2379) ()) (q 2 (i (> (q . 3055) ()) (q 2 (i (> (q . 3731) ()) (q 2 (i (> (q . 4407) ()) (q 2 (i (> (q . 5083) ()) (q 2 (i (> (q . 5759) ()) (q 2 (i (> (q . 6435) ()) (q) (q 8)) 1) (q 8)) 1) (q 8)) 1) (q 8)) 1) (q 8)) 1) (q 8)) 1) (q 8)) 1) (q 8)) 1) (q 8)) 1) (q 8)) 1)
  debug_program: (a (q 2 2 (c (c (c (c (c (c (c (c (q . 1) (q . 2)) (c (q . 3) (q . 4))) (c (c (q . 5) (q . 6)) (c (q . 7) (q . 8)))) (c (c (c (q . 9) (q . 10)) (c (q . 11) (q . 12))) (c (c (q . 13) (q . 14)) (c (q . 15) (q . 16))))) (c (c (c (c (q . 17) (q . 18)) (c (q . 19) (q . 20))) (c (c (q . 21) (q . 22)) (c (q . 23) (q . 24)))) (c (c (c (q . 25) (q . 26)) (c (q . 27) (q . 28))) (c (c (q . 29) (q . 30)) (c (q . 31) (q . 32)))))) (c (c (c (c (c (q . 33) (q . 34)) (c (q . 35) (q . 36))) (c (c (q . 37) (q . 38)) (c (q . 39) (q . 40)))) (c (c (c (q . 41) (q . 42)) (c (q . 43) (q . 44))) (c (c (q . 45) (q . 46)) (c (q . 47) (q . 48))))) (c (c (c (c (q . 49) (q . 50)) (c (q . 51) (q . 52))) (c (c (q . 53) (q . 54)) (c (q . 55) (q . 56)))) (c (c (c (q . 57) (q . 58)) (c (q . 59) (q . 60))) (c (c (q . 61) (q . 62)) (c (q . 63) (c (q . 64) (q . 65)))))))) (c (c (c (c (c (c (q . 66) (q . 67)) (c (q . 68) (q . 69))) (c (c (q . 70) (q . 71)) (c (q . 72) (q . 73)))) (c (c (c (q . 74) (q . 75)) (c (q . 76) (q . 77))) (c (c (q . 78) (q . 79)) (c (q . 80) (q . 81))))) (c (c (c (c (q . 82) (q . 83)) (c (q . 84) (q . 85))) (c (c (q . 86) (q . 87)) (c (q . 88) (q . 89)))) (c (c (c (q . 90) (q . 91)) (c (q . 92) (q . 93))) (c (c (q . 94) (q . 95)) (c (q . 96) (q . 97)))))) (c (c (c (c (c (q . 98) (q . 99)) (c (q . 100) (q . 101))) (c (c (q . 102) (q . 103)) (c (q . 104) (q . 105)))) (c (c (c (q . 106) (q . 107)) (c (q . 108) (q . 109))) (c (c (q . 110) (q . 111)) (c (q . 112) (q . 113))))) (c (c (c (c (q . 114) (q . 115)) (c (q . 116) (q . 117))) (c (c (q . 118) (q . 119)) (c (q . 120) (q . 121)))) (c (c (c (q . 122) (q . 123)) (c (q . 124) (q . 125))) (c (c (q . 126) (q . 127)) (c (q . 128) (c (q . 129) (q . 130))))))))) (c (c (c (c (c (c (c (q . 131) (q . 132)) (c (q . 133) (q . 134))) (c (c (q . 135) (q . 136)) (c (q . 137) (q . 138)))) (c (c (c (q . 139) (q . 140)) (c (q . 141) (q . 142))) (c (c (q . 143) (q . 144)) (c (q . 145) (q . 146))))) (c (c (c (c (q . 147) (q . 148)) (c (q . 149) (q . 150))) (c (c (q . 151) (q . 152)) (c (q . 153) (q . 154)))) (c (c (c (q . 155) (q . 156)) (c (q . 157) (q . 158))) (c (c (q . 159) (q . 160)) (c (q . 161) (q . 162)))))) (c (c (c (c (c (q . 163) (q . 164)) (c (q . 165) (q . 166))) (c (c (q . 167) (q . 168)) (c (q . 169) (q . 170)))) (c (c (c (q . 171) (q . 172)) (c (q . 173) (q . 174))) (c (c (q . 175) (q . 176)) (c (q . 177) (q . 178))))) (c (c (c (c (q . 179) (q . 180)) (c (q . 181) (q . 182))) (c (c (q . 183) (q . 184)) (c (q . 185) (q . 186)))) (c (c (c (q . 187) (q . 188)) (c (q . 189) (q . 190))) (c (c (q . 191) (q . 192)) (c (q . 193) (c (q . 194) (q . 195)))))))) (c (c (c (c (c (c (q . 196) (q . 197)) (c (q . 198) (q . 199))) (c (c (q . 200) (q . 201)) (c (q . 202) (q . 203)))) (c (c (c (q . 204) (q . 205)) (c (q . 206) (q . 207))) (c (c (q . 208) (q . 209)) (c (q . 210) (q . 211))))) (c (c (c (c (q . 212) (q . 213)) (c (q . 214) (q . 215))) (c (c (q . 216) (q . 217)) (c (q . 218) (q . 219)))) (c (c (c (q . 220) (q . 221)) (c (q . 222) (q . 223))) (c (c (q . 224) (q . 225)) (c (q . 226) (q . 227)))))) (c (c (c (c (c (q . 228) (q . 229)) (c (q . 230) (q . 231))) (c (c (q . 232) (q . 233)) (c (q . 234) (q . 235)))) (c (c (c (q . 236) (q . 237)) (c (q . 238) (q . 239))) (c (c (q . 240) (q . 241)) (c (q . 242) (q . 243))))) (c (c (c (c (q . 244) (q . 245)) (c (q . 246) (q . 247))) (c (c (q . 248) (q . 249)) (c (q . 250) (q . 251)))) (c (c (c (q . 252) (q . 253)) (c (q . 254) (q . 255))) (c (c (q . 256) (q . 257)) (c (q . 258) (c (q . 259) (q . 260))))))))))) (c (q 2 (i (> (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ 256 384) 320) 448) 288) 416) 352) 480) 272) 400) 336) 464) 304) 432) 368) 496) 264) 392) 328) 456) 296) 424) 360) 488) 280) 408) ()) (q 2 (i (> (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ 344 472) 312) 440) 376) 504) 260) 388) 324) 452) 292) 420) 356) 484) 276) 404) 340) 468) 308) 436) 372) 500) 268) 396) 332) 460) ()) (q 2 (i (> (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ 300 428) 364) 492) 284) 412) 348) 476) 316) 444) 380) 764) 1020) 258) 386) 322) 450) 290) 418) 354) 482) 274) 402) 338) 466) 306) ()) (q 2 (i (> (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ 434 370) 498) 266) 394) 330) 458) 298) 426) 362) 490) 282) 410) 346) 474) 314) 442) 378) 506) 262) 390) 326) 454) 294) 422) 358) ()) (q 2 (i (> (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ 486 278) 406) 342) 470) 310) 438) 374) 502) 270) 398) 334) 462) 302) 430) 366) 494) 286) 414) 350) 478) 318) 446) 382) 766) 1022) ()) (q 2 (i (> (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ 257 385) 321) 449) 289) 417) 353) 481) 273) 401) 337) 465) 305) 433) 369) 497) 265) 393) 329) 457) 297) 425) 361) 489) 281) 409) ()) (q 2 (i (> (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ 345 473) 313) 441) 377) 505) 261) 389) 325) 453) 293) 421) 357) 485) 277) 405) 341) 469) 309) 437) 373) 501) 269) 397) 333) 461) ()) (q 2 (i (> (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ 301 429) 365) 493) 285) 413) 349) 477) 317) 445) 381) 765) 1021) 259) 387) 323) 451) 291) 419) 355) 483) 275) 403) 339) 467) 307) ()) (q 2 (i (> (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ 435 371) 499) 267) 395) 331) 459) 299) 427) 363) 491) 283) 411) 347) 475) 315) 443) 379) 507) 263) 391) 327) 455) 295) 423) 359) ()) (q 2 (i (> (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ 487 279) 407) 343) 471) 311) 439) 375) 503) 271) 399) 335) 463) 303) 431) 367) 495) 287) 415) 351) 479) 319) 447) 383) 767) 1023) ()) (q) (q 8 (q . "assertion failed at 276:5"))) 1) (q 8 (q . "assertion failed at 275:5"))) 1) (q 8 (q . "assertion failed at 274:5"))) 1) (q 8 (q . "assertion failed at 273:5"))) 1) (q 8 (q . "assertion failed at 272:5"))) 1) (q 8 (q . "assertion failed at 271:5"))) 1) (q 8 (q . "assertion failed at 270:5"))) 1) (q 8 (q . "assertion failed at 269:5"))) 1) (q 8 (q . "assertion failed at 268:5"))) 1) (q 8 (q . "assertion failed at 267:5"))) 1) ()))
  output: ()
  runtime_cost: 7802
  byte_cost: 3612000
  total_cost: 3619804
