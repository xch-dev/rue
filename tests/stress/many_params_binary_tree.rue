test fn call_binary_tree() {
    function(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260);
}

fn function(
    a_1: Int,
    b_1: Int,
    c_1: Int,
    d_1: Int,
    e_1: Int,
    f_1: Int,
    g_1: Int,
    h_1: Int,
    i_1: Int,
    j_1: Int,
    k_1: Int,
    l_1: Int,
    m_1: Int,
    n_1: Int,
    o_1: Int,
    p_1: Int,
    q_1: Int,
    r_1: Int,
    s_1: Int,
    t_1: Int,
    u_1: Int,
    v_1: Int,
    w_1: Int,
    x_1: Int,
    y_1: Int,
    z_1: Int,
    a_2: Int,
    b_2: Int,
    c_2: Int,
    d_2: Int,
    e_2: Int,
    f_2: Int,
    g_2: Int,
    h_2: Int,
    i_2: Int,
    j_2: Int,
    k_2: Int,
    l_2: Int,
    m_2: Int,
    n_2: Int,
    o_2: Int,
    p_2: Int,
    q_2: Int,
    r_2: Int,
    s_2: Int,
    t_2: Int,
    u_2: Int,
    v_2: Int,
    w_2: Int,
    x_2: Int,
    y_2: Int,
    z_2: Int,
    a_3: Int,
    b_3: Int,
    c_3: Int,
    d_3: Int,
    e_3: Int,
    f_3: Int,
    g_3: Int,
    h_3: Int,
    i_3: Int,
    j_3: Int,
    k_3: Int,
    l_3: Int,
    m_3: Int,
    n_3: Int,
    o_3: Int,
    p_3: Int,
    q_3: Int,
    r_3: Int,
    s_3: Int,
    t_3: Int,
    u_3: Int,
    v_3: Int,
    w_3: Int,
    x_3: Int,
    y_3: Int,
    z_3: Int,
    a_4: Int,
    b_4: Int,
    c_4: Int,
    d_4: Int,
    e_4: Int,
    f_4: Int,
    g_4: Int,
    h_4: Int,
    i_4: Int,
    j_4: Int,
    k_4: Int,
    l_4: Int,
    m_4: Int,
    n_4: Int,
    o_4: Int,
    p_4: Int,
    q_4: Int,
    r_4: Int,
    s_4: Int,
    t_4: Int,
    u_4: Int,
    v_4: Int,
    w_4: Int,
    x_4: Int,
    y_4: Int,
    z_4: Int,
    a_5: Int,
    b_5: Int,
    c_5: Int,
    d_5: Int,
    e_5: Int,
    f_5: Int,
    g_5: Int,
    h_5: Int,
    i_5: Int,
    j_5: Int,
    k_5: Int,
    l_5: Int,
    m_5: Int,
    n_5: Int,
    o_5: Int,
    p_5: Int,
    q_5: Int,
    r_5: Int,
    s_5: Int,
    t_5: Int,
    u_5: Int,
    v_5: Int,
    w_5: Int,
    x_5: Int,
    y_5: Int,
    z_5: Int,
    a_6: Int,
    b_6: Int,
    c_6: Int,
    d_6: Int,
    e_6: Int,
    f_6: Int,
    g_6: Int,
    h_6: Int,
    i_6: Int,
    j_6: Int,
    k_6: Int,
    l_6: Int,
    m_6: Int,
    n_6: Int,
    o_6: Int,
    p_6: Int,
    q_6: Int,
    r_6: Int,
    s_6: Int,
    t_6: Int,
    u_6: Int,
    v_6: Int,
    w_6: Int,
    x_6: Int,
    y_6: Int,
    z_6: Int,
    a_7: Int,
    b_7: Int,
    c_7: Int,
    d_7: Int,
    e_7: Int,
    f_7: Int,
    g_7: Int,
    h_7: Int,
    i_7: Int,
    j_7: Int,
    k_7: Int,
    l_7: Int,
    m_7: Int,
    n_7: Int,
    o_7: Int,
    p_7: Int,
    q_7: Int,
    r_7: Int,
    s_7: Int,
    t_7: Int,
    u_7: Int,
    v_7: Int,
    w_7: Int,
    x_7: Int,
    y_7: Int,
    z_7: Int,
    a_8: Int,
    b_8: Int,
    c_8: Int,
    d_8: Int,
    e_8: Int,
    f_8: Int,
    g_8: Int,
    h_8: Int,
    i_8: Int,
    j_8: Int,
    k_8: Int,
    l_8: Int,
    m_8: Int,
    n_8: Int,
    o_8: Int,
    p_8: Int,
    q_8: Int,
    r_8: Int,
    s_8: Int,
    t_8: Int,
    u_8: Int,
    v_8: Int,
    w_8: Int,
    x_8: Int,
    y_8: Int,
    z_8: Int,
    a_9: Int,
    b_9: Int,
    c_9: Int,
    d_9: Int,
    e_9: Int,
    f_9: Int,
    g_9: Int,
    h_9: Int,
    i_9: Int,
    j_9: Int,
    k_9: Int,
    l_9: Int,
    m_9: Int,
    n_9: Int,
    o_9: Int,
    p_9: Int,
    q_9: Int,
    r_9: Int,
    s_9: Int,
    t_9: Int,
    u_9: Int,
    v_9: Int,
    w_9: Int,
    x_9: Int,
    y_9: Int,
    z_9: Int,
    a_10: Int,
    b_10: Int,
    c_10: Int,
    d_10: Int,
    e_10: Int,
    f_10: Int,
    g_10: Int,
    h_10: Int,
    i_10: Int,
    j_10: Int,
    k_10: Int,
    l_10: Int,
    m_10: Int,
    n_10: Int,
    o_10: Int,
    p_10: Int,
    q_10: Int,
    r_10: Int,
    s_10: Int,
    t_10: Int,
    u_10: Int,
    v_10: Int,
    w_10: Int,
    x_10: Int,
    y_10: Int,
    z_10: Int,
) {
    assert (a_1 + b_1 + c_1 + d_1 + e_1 + f_1 + g_1 + h_1 + i_1 + j_1 + k_1 + l_1 + m_1 + n_1 + o_1 + p_1 + q_1 + r_1 + s_1 + t_1 + u_1 + v_1 + w_1 + x_1 + y_1 + z_1) > 0;
    assert (a_2 + b_2 + c_2 + d_2 + e_2 + f_2 + g_2 + h_2 + i_2 + j_2 + k_2 + l_2 + m_2 + n_2 + o_2 + p_2 + q_2 + r_2 + s_2 + t_2 + u_2 + v_2 + w_2 + x_2 + y_2 + z_2) > 0;
    assert (a_3 + b_3 + c_3 + d_3 + e_3 + f_3 + g_3 + h_3 + i_3 + j_3 + k_3 + l_3 + m_3 + n_3 + o_3 + p_3 + q_3 + r_3 + s_3 + t_3 + u_3 + v_3 + w_3 + x_3 + y_3 + z_3) > 0;
    assert (a_4 + b_4 + c_4 + d_4 + e_4 + f_4 + g_4 + h_4 + i_4 + j_4 + k_4 + l_4 + m_4 + n_4 + o_4 + p_4 + q_4 + r_4 + s_4 + t_4 + u_4 + v_4 + w_4 + x_4 + y_4 + z_4) > 0;
    assert (a_5 + b_5 + c_5 + d_5 + e_5 + f_5 + g_5 + h_5 + i_5 + j_5 + k_5 + l_5 + m_5 + n_5 + o_5 + p_5 + q_5 + r_5 + s_5 + t_5 + u_5 + v_5 + w_5 + x_5 + y_5 + z_5) > 0;
    assert (a_6 + b_6 + c_6 + d_6 + e_6 + f_6 + g_6 + h_6 + i_6 + j_6 + k_6 + l_6 + m_6 + n_6 + o_6 + p_6 + q_6 + r_6 + s_6 + t_6 + u_6 + v_6 + w_6 + x_6 + y_6 + z_6) > 0;
    assert (a_7 + b_7 + c_7 + d_7 + e_7 + f_7 + g_7 + h_7 + i_7 + j_7 + k_7 + l_7 + m_7 + n_7 + o_7 + p_7 + q_7 + r_7 + s_7 + t_7 + u_7 + v_7 + w_7 + x_7 + y_7 + z_7) > 0;
    assert (a_8 + b_8 + c_8 + d_8 + e_8 + f_8 + g_8 + h_8 + i_8 + j_8 + k_8 + l_8 + m_8 + n_8 + o_8 + p_8 + q_8 + r_8 + s_8 + t_8 + u_8 + v_8 + w_8 + x_8 + y_8 + z_8) > 0;
    assert (a_9 + b_9 + c_9 + d_9 + e_9 + f_9 + g_9 + h_9 + i_9 + j_9 + k_9 + l_9 + m_9 + n_9 + o_9 + p_9 + q_9 + r_9 + s_9 + t_9 + u_9 + v_9 + w_9 + x_9 + y_9 + z_9) > 0;
    assert (a_10 + b_10 + c_10 + d_10 + e_10 + f_10 + g_10 + h_10 + i_10 + j_10 + k_10 + l_10 + m_10 + n_10 + o_10 + p_10 + q_10 + r_10 + s_10 + t_10 + u_10 + v_10 + w_10 + x_10 + y_10 + z_10) > 0;
}
