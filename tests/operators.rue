test fn arithmetic() {
    assert +42 == 42;
    assert -42 == 0 - 42;

    assert 100 + 200 == 300;
    assert "a" + "b" == "ab";
    assert INFINITY_G1 + INFINITY_G1 == INFINITY_G1;
    assert INFINITY_G2 + INFINITY_G2 == INFINITY_G2;

    assert 100 - 200 == -100;
    assert INFINITY_G1 - INFINITY_G1 == INFINITY_G1;
    assert INFINITY_G2 - INFINITY_G2 == INFINITY_G2;

    assert 100 * 2 == 200;
    assert INFINITY_G1 * INFINITY_G1 == INFINITY_G1;
    assert INFINITY_G2 * INFINITY_G2 == INFINITY_G2;

    assert 200 / 3 == 66;
    assert 200 % 3 == 2;
    assert 66 * 3 + 2 == 200;
    assert -200 / 3 == -67;
    assert -200 % 3 == 1;
    assert -67 * 3 + 1 == -200;
    
    assert modpow(2, 3, 5) == 3;
}

test fn comparison() {
    assert 100 == 100;
    assert !(100 == 101);
    assert 100 != 101;
    assert !(100 != 100);

    assert 100 > 50;
    assert 50 < 100;
    assert 100 >= 50;
    assert 100 >= 100;
    assert 50 <= 100;
    assert 100 <= 100;

    assert "a" == "a";
    assert !("a" == "b");
    assert "a" != "b";
    assert !("a" != "a");

    assert "b" > "a";
    assert "a" < "b";
    assert "b" >= "a";
    assert "b" >= "b";
    assert "a" <= "b";
    assert "a" <= "a";

    assert true;
    assert !false;
    assert true && true;
    assert true & true;
    assert true || false;
    assert true | false;
    assert false || true;
    assert false | true;
}
